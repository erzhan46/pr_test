name: Pull request create or resync

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --tags origin 
      - name: Get commits in PR
        id: get_commits
        run: |
          BASE_SHA=$(git rev-parse origin/${{ github.base_ref }}^2)
          echo $BASE_SHA
          HEAD_SHA=$(git rev-parse origin/${{ github.head_ref }})
          echo $HEAD_SHA
          COMMIT_LIST=$(git rev-list --ancestry-path ${BASE_SHA}..${HEAD_SHA})
          COMMIT_LIST="${COMMIT_LIST//'%'/'%25'}"
          COMMIT_LIST="${COMMIT_LIST//$'\n'/'%0A'}"
          COMMIT_LIST="${COMMIT_LIST//$'\r'/'%0D'}"
          echo "::set-output name=commits::${COMMIT_LIST}"
      - name: Get code version tag in scope of PR (latest/if any)
        id: get_latest_code_tag
        run: |
          COMMIT_LIST="${{ steps.get_commits.outputs.commits }}"
          TAGS=$(echo ${COMMIT_LIST} | while read COMMIT; do; git describe --tags --match="v[0-9]*\.[0-9]*\.[0-9]*" --exact-match  ${COMMIT} 3>/dev/null || true; done)
          echo ${TAGS}
      - run: |
          echo "last tag"
          git describe --tags  $(git rev-list --tags="v[0-9]*\.[0-9]*\.[0-9]*" --max-count=1)
          echo "last release tag"
          git describe --tags  $(git rev-list --tags="release-[0-9]*\.[0-9]*\.[0-9]*" --max-count=1)


  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - name: Get changed files
        id: file_changes
        run: |
          DIFF=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }})
          echo "Diff between ${{ github.base_ref }} and ${{ github.sha }}"
          echo "$DIFF"
          echo "::set-output name=files::$( echo "$DIFF" | xargs echo )"    
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0
        env:
          SKIP: no-commit-to-branch
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          extra_args: --color=always --show-diff-on-failure --files ${{ steps.file_changes.outputs.files }}
        
  context-debug:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"

