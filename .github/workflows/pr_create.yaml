name: Pull request create or resync

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  #tag:
    #runs-on: ubuntu-latest
    # Copy tags to the latest commit

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Base_ref: ${{ github.base_ref }}"
          echo "Head_ref: ${{ github.head_ref }}"
          echo "Ref: ${{ github.ref }}"
          echo "Ref: ${{ github.ref }}"
      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - name: Get changed files
        id: file_changes
        run: |
          export DIFF=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }})
          echo "Diff between ${{ github.base_ref }} and ${{ github.sha }}"
          echo "$DIFF"
          echo "::set-output name=files::$( echo "$DIFF" | xargs echo )"    
      - run: |
          git log
          echo "1"
          git log origin/main
          echo "2"
          git log ${{ github.sha }}
          echo "3"
          git log ${{ github.ref }}
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0
        env:
          SKIP: no-commit-to-branch
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          extra_args: --color=always --show-diff-on-failure --files ${{ steps.file_changes.outputs.files }}
        
  one:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"

